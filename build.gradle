plugins {
    id "java"
    id "maven-publish"
    id "io.freefair.lombok" version "5.3.0"
    id 'org.springframework.boot' version '2.5.0-M1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.ben-manes.versions" version "0.36.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    springVersion = '2.5.0-M1'
    graphqlVersion = '11.0.0'
    mapstructVersion = '1.4.2.Final'
    mapstructBindingVesion = '0.2.0'
    guavaVersion = '30.1-jre'
    junitVersion = '5.7.0'
    embedMongoVersion = '3.0.0'
    reactorTestVersion = '3.4.0-M1'
    hibernateValidatorVersion = '7.0.0.Final'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-configuration-processor:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-mail:${springVersion}"
    implementation "org.springframework.boot:spring-boot-starter-security:${springVersion}"

    implementation "com.graphql-java-kickstart:graphql-kickstart-spring-boot-starter-tools:${graphqlVersion}"
    implementation "com.graphql-java-kickstart:graphql-kickstart-spring-boot-starter-webflux:${graphqlVersion}"

    implementation "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
    implementation "org.hibernate:hibernate-validator-annotation-processor:${hibernateValidatorVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructBindingVesion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    runtimeOnly "org.springframework.boot:spring-boot-devtools:${springVersion}"
    runtimeOnly "com.graphql-java-kickstart:graphiql-spring-boot-starter:${graphqlVersion}"

    testImplementation "org.springframework.boot:spring-boot-starter-test:${springVersion}"
    testImplementation "io.projectreactor:reactor-test:${reactorTestVersion}"
    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embedMongoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "com.graphql-java-kickstart:graphql-spring-boot-starter-test:${graphqlVersion}"

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

}

group = "pl.maciejkopec"
version = "1.0.0-SNAPSHOT"
description = "cms"
sourceCompatibility = '15'

tasks.withType(JavaCompile) {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "--enable-preview"
    options.encoding = "UTF-8"

}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = "micneo/cms"
}

compileJava.inputs.files(processResources)
