plugins {
    id "java"
    id "maven-publish"
    id "io.freefair.lombok" version "6.6.3"
    id 'org.springframework.boot' version '3.0.3'
    id 'io.spring.dependency-management' version '1.1.0'
    id "com.github.ben-manes.versions" version "0.46.0"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

ext {
    mapstructVersion = '1.5.3.Final'
    mapstructBindingVesion = '0.2.0'
    guavaVersion = '31.1-jre'
    junitVersion = '5.9.2'
    embedMongoVersion = '4.6.1'
    reactorTestVersion = '3.5.3'
    hibernateValidatorVersion = '8.0.0.Final'
}

dependencies {
    implementation "org.springframework.boot:spring-boot-properties-migrator"

    implementation "org.springframework.boot:spring-boot-configuration-processor"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb-reactive"
    implementation "org.springframework.boot:spring-boot-starter-webflux"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-security"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'

    implementation "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
    implementation "com.microsoft.azure:applicationinsights-runtime-attach:3.4.10"

    implementation "org.hibernate:hibernate-validator-annotation-processor:${hibernateValidatorVersion}"

    implementation "com.google.guava:guava:${guavaVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${mapstructBindingVesion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    developmentOnly "org.springframework.boot:spring-boot-devtools"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "io.projectreactor:reactor-test:${reactorTestVersion}"
    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo:${embedMongoVersion}"
    testImplementation "de.flapdoodle.embed:de.flapdoodle.embed.mongo.spring30x:${embedMongoVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation 'org.springframework.graphql:spring-graphql-test:1.1.2'


}

group = "pl.maciejkopec"
version = "1.0.0-SNAPSHOT"
description = "cms"
sourceCompatibility = '17'

tasks.withType(JavaCompile) {
    options.compilerArgs += "-Amapstruct.defaultComponentModel=spring"
    options.compilerArgs += "--enable-preview"
    options.encoding = "UTF-8"

}

tasks.withType(Test) {
    jvmArgs += "--enable-preview"
}

test {
    useJUnitPlatform()
}

bootBuildImage {
    builder = "micneo/cms"
}

jar {
    enabled = false
}

compileJava.inputs.files(processResources)
